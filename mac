save_reg macro
	push ax
	push bx
	push cx
	push dx
	push si
	push di
endm

load_reg macro
	pop di
	pop si
	pop dx
	pop cx
	pop bx
	pop ax
endm

printw macro n
	save_reg
	mov ax,n
	local stacking,printing
	mov bx,10d
	xor cx,cx
stacking:
	xor dx,dx
	div bx
	inc cx
	or dx,30h
	push dx
	or ax,ax
	jne stacking
printing:
	pop dx
	mov ah,2h
	int 21h
	loop printing
	load_reg
endm